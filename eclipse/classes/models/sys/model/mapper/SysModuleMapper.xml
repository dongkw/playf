<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="SysModule">

	<resultMap id="RM_SysModule" type="models.sys.model.SysModule">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="code" column="code"/>
        <result property="discription" column="discription"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="SysModule.columns">
	    <![CDATA[
		id,name,code,discription
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="SysModule.insert" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO sys_module (
        	id ,
        	name ,
        	code ,
        	discription 
        ) VALUES (
        	#{id} ,
        	#{name} ,
        	#{code} ,
        	#{discription} 
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="SysModule.update" >
    <![CDATA[
        UPDATE sys_module SET
	        name = #{name} ,
	        code = #{code} ,
	        discription = #{discription} 
        WHERE 
	        id = #{id} 
    ]]>
	</update>

    <delete id="SysModule.delete">
    <![CDATA[
        DELETE FROM sys_module WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <select id="SysModule.getById" resultMap="RM_SysModule">
		SELECT <include refid="SysModule.columns" />
	    <![CDATA[
		    FROM sys_module 
	        WHERE 
		        id = #{id} 
	    ]]>
	</select>
	
	<sql id="SysModule.findPage.where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
			<if test="@Ognl@isNotEmpty(id)">
				AND id = #{id}
			</if>
			<if test="@Ognl@isNotEmpty(name)">
				AND name = #{name}
			</if>
			<if test="@Ognl@isNotEmpty(code)">
				AND code = #{code}
			</if>
			<if test="@Ognl@isNotEmpty(discription)">
				AND discription = #{discription}
			</if>
		</where>
	</sql>
		
    <select id="SysModule.findPage.count" resultType="long">
        SELECT count(*) FROM sys_module 
		<include refid="SysModule.findPage.where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="SysModule.findPage" resultMap="RM_SysModule">
    	SELECT <include refid="SysModule.columns" />
	    FROM sys_module 
		<include refid="SysModule.findPage.where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
</mapper>


<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="InfoDict">

	<resultMap id="RM_InfoDict" type="models.info.model.InfoDict">
        <result property="id" column="id"/>
        <result property="itemCode" column="item_code"/>
        <result property="itemValue" column="item_value"/>
        <result property="posit" column="posit"/>
        <result property="status" column="status"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="InfoDict.columns">
	    <![CDATA[
		id,item_code,item_value,posit,status
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="InfoDict.insert" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO info_dict (
        	id ,
        	item_code ,
        	item_value ,
        	posit ,
        	status
        ) VALUES (
        	#{id} ,
        	#{itemCode} ,
        	#{itemValue} ,
        	#{posit} ,
        	#{status}
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="InfoDict.update" >
    <![CDATA[
        UPDATE info_dict SET
	        item_code = #{itemCode} ,
	        item_value = #{itemValue} ,
	        posit = #{posit} ,
	        status = #{status}
        WHERE 
	        id = #{id} 
    ]]>
	</update>

    <delete id="InfoDict.delete">
    <![CDATA[
        DELETE FROM info_dict WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <select id="InfoDict.getById" resultMap="RM_InfoDict">
		SELECT <include refid="InfoDict.columns" />
	    <![CDATA[
		    FROM info_dict 
	        WHERE 
		        id = #{id} 
	    ]]>
	</select>
	
	<sql id="InfoDict.findPage.where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
			<if test="@Ognl@isNotEmpty(id)">
				AND id = #{id}
			</if>
			<if test="@Ognl@isNotEmpty(itemCode)">
				AND item_code = #{itemCode}
			</if>
			<if test="@Ognl@isNotEmpty(itemValue)">
				AND item_value = #{itemValue}
			</if>
			<if test="@Ognl@isNotEmpty(posit)">
				AND posit = #{posit}
			</if>
			<if test="@Ognl@isNotEmpty(status)">
				AND status = #{status}
			</if>
		</where>
	</sql>
		
    <select id="InfoDict.findPage.count" resultType="long">
        SELECT count(*) FROM info_dict 
		<include refid="InfoDict.findPage.where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="InfoDict.findPage" resultMap="RM_InfoDict">
    	SELECT <include refid="InfoDict.columns" />
	    FROM info_dict 
		<include refid="InfoDict.findPage.where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>
     <!-- 自己写的方法开始 -->
	
</mapper>

